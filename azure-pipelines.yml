trigger:
  branches:
    include:
      - main
pr:
  branches:
    exclude:
      - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
- name: sonarCloudEndpointName 
  value: 'sonarcloud_service_connection'
- name: sonarCloudProjectName 
  value: 'Demo Project'
- group: Code_Fix_Agent_dotenv

resources:
  repositories:
    - repository: self
    - repository: sonarqube-issue-fixer
      type: git
      name: "SonarQube Issue Fixer/SonarQube Issue Fixer"

steps:
- checkout: self

- task: SonarCloudPrepare@2
  inputs:
    SonarCloud: '$(sonarCloudEndpointName)'
    organization: '$(SONAR_ORGANISATION)'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: '$(SONAR_PROJECT_KEY)'
    cliProjectName: '$(sonarCloudProjectName)'
    cliProjectVersion: '1.0'
    cliSources: '.'

- task: SonarCloudAnalyze@2

- task: SonarCloudPublish@2
  inputs:
    pollingTimeoutSec: '300'
- checkout: sonarqube-issue-fixer

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.10'
    addToPath: true
    

- script: |
    echo "Current directory: $(pwd)"
    echo "Listing contents of current directory:"
    ls -la
    echo "Changing to SonarQube Issue Fixer directory"
    cd '$(Build.SourcesDirectory)/SonarQube Issue Fixer/sonarqube-project'
    echo "New current directory: $(pwd)"
    echo "Listing contents of SonarQube Issue Fixer directory:"
    ls -la
    echo "Creating virtual environment"
    python -m venv venv
    echo "Activating virtual environment"
    source venv/bin/activate
    echo "Upgrading pip"
    python -m pip install --upgrade pip
    echo "Installing requirements"
    pip install -r scripts/requirements.txt
    echo "Listing installed packages"
    pip list
  displayName: 'Setup and Update venv'
  continueOnError: true

# Run Python script to retrieve SonarCloud issues
- script: |
    cd '$(Build.SourcesDirectory)/SonarQube Issue Fixer/sonarqube-project'
    source venv/bin/activate
    python scripts/fetch_sonarcloud_issues.py $(SONAR_ORGANISATION) $(SONAR_PROJECT_KEY) $(SONAR_TOKEN)
  displayName: 'Retrieve SonarCloud Issues'

# Publish issues as an artifact
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.SourcesDirectory)/SonarQube Issue Fixer/sonarqube-project/issues.json'
    artifactName: 'SonarCloudIssues'
    publishLocation: 'pipeline'

# Run agent.py script using issues.json as input
- script: |
    cd '$(Build.SourcesDirectory)/SonarQube Issue Fixer/sonarqube-project'
    source venv/bin/activate
    python scripts/agent.py 'issues.json'
  displayName: 'Run Agent Script'
  env:
    CURRENT_BRANCH: $(CURRENT_BRANCH)
    GITHUB_ACCESS_TOKEN: $(GITHUB_ACCESS_TOKEN)
    OPENAI_API_KEY: $(OPENAI_API_KEY)
    OPENAI_MODEL: $(OPENAI_MODEL)
    REPO_URL: $(REPO_URL)