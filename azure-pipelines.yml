trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  sonarCloudEndpointName: 'sonarcloud_service_connection'
  sonarCloudProjectName: 'Test Project'

resources:
  repositories:
    - repository: self
    - repository: sonarqube-issue-fixer
      type: git
      name: "SonarQube Issue Fixer/SonarQube Issue Fixer"

steps:

- checkout: self

- task: SonarCloudPrepare@2
  inputs:
    SonarCloud: '$(sonarCloudEndpointName)'
    organization: '$(SONAR_ORGANISATION)'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: '$(SONAR_PROJECT_KEY)'
    cliProjectName: '$(sonarCloudProjectName)'
    cliProjectVersion: '1.0'
    cliSources: '.'  # Update this to the correct source directory

- task: SonarCloudAnalyze@2

# Uncomment the next task to wait until SonarCloud processing has finished and to publish the result on the Pipeline build summary
- task: SonarCloudPublish@2
  inputs:
    pollingTimeoutSec: '300'

- checkout: sonarqube-issue-fixer

# Run Python script to retrieve SonarCloud issues
- script: |
    python '$(Build.SourcesDirectory)/SonarQube Issue Fixer/sonarqube-project/scripts/fetch_sonarcloud_issues.py' $(SONAR_ORGANISATION) $(SONAR_PROJECT_KEY) $(SONAR_TOKEN)
  displayName: 'Retrieve SonarCloud Issues'
  workingDirectory: $(System.DefaultWorkingDirectory)

# Publish issues as an artifact
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/issues.json'
    artifactName: 'SonarCloudIssues'
    publishLocation: 'pipeline'